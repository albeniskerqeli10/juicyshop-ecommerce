{"version":3,"sources":["components/Message.js","UI/Button.js","redux/actions/productActions.js","components/Rating.js","screens/ProductScreen.js"],"names":["Message","variant","children","defaultProps","Button","type","onClick","className","size","href","disabled","as","listProducts","dispatch","a","PRODUCT_LIST_REQUEST","axios","get","data","PRODUCT_LIST_SUCCESS","payload","PRODUCT_LIST_FAIL","response","message","listProductsDetails","id","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","Rating","value","text","color","style","ProductScreen","history","match","useState","qty","setQty","productDetails","useSelector","state","product","error","loading","useDispatch","useEffect","params","to","md","src","image","alt","name","fluid","Item","rating","numReviews","price","description","countInStock","Control","onChange","e","target","Array","keys","map","x","push"],"mappings":"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","file":"static/js/Product.8559c27f.chunk.js","sourcesContent":["import {Alert} from 'react-bootstrap';\r\n\r\nconst Message = ({variant,children}) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant:\"info\", \r\n}\r\n\r\nexport default Message\r\n","import {Button as ButtonBs} from 'react-bootstrap';\r\n\r\nconst Button = ({children ,type, onClick, variant, className , size,href , disabled ,as}) => {\r\n    return(\r\n        <ButtonBs type={type} variant={variant} className={className} onClick={onClick}  size={size} href={href} disabled={disabled} as={as}>{children}</ButtonBs>\r\n    )\r\n    }\r\n\r\n    export default Button;","import {PRODUCT_LIST_REQUEST , PRODUCT_DETAILS_REQUEST,  PRODUCT_LIST_SUCCESS , PRODUCT_LIST_FAIL , PRODUCT_DETAILS_SUCCESS , PRODUCT_DETAILS_FAIL} from '../constants/productConstants.js';\r\nimport axios from 'axios';\r\nexport const listProducts = () => async(dispatch) => {\r\n    try {\r\n        dispatch({type:PRODUCT_LIST_REQUEST})\r\nconst {data} = await axios.get('http://localhost:5000/api/products');\r\n\r\ndispatch({ type:PRODUCT_LIST_SUCCESS , payload:data})\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type:PRODUCT_LIST_FAIL,\r\n            payload:error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductsDetails  = (id) => async(dispatch) => {\r\ntry{\r\n    dispatch({type:PRODUCT_DETAILS_REQUEST})\r\n    const {data}  = await axios.get(`http://localhost:5000/api/products/${id}`);\r\n    dispatch({type:PRODUCT_DETAILS_SUCCESS , payload:data})\r\n} catch(err){\r\n dispatch({type:PRODUCT_DETAILS_FAIL , payload:err.response && err.response.data.message? err.response.data.message:err.message})\r\n}\r\n\r\n}","\r\nimport PropTypes from 'prop-types';\r\nimport {FaStar , FaStarHalfAlt , } from 'react-icons/fa';\r\nimport {AiOutlineStar} from 'react-icons/ai';\r\nconst Rating = ({value ,text, color}) => {\r\n    return (\r\n        <div className=\"rating\">\r\n             <span>\r\n               <i  style={{color}} className>{value >= 1 ? <FaStar/>: value >= 0.5 ? <FaStarHalfAlt/> : <AiOutlineStar/>}</i>  \r\n             </span>\r\n             <span>\r\n               <i style={{color}} >{value >= 2 ? <FaStar/>: value >= 1.5 ? <FaStarHalfAlt/> : <AiOutlineStar/>}</i>  \r\n             </span>\r\n             <span>\r\n               <i style={{color}} >{value >= 3 ? <FaStar/>: value >= 2.5 ? <FaStarHalfAlt/> :<AiOutlineStar/>}</i>  \r\n             </span>\r\n             <span>\r\n               <i style={{color}} >{value >= 4 ? <FaStar/>: value >= 3.5 ? <FaStarHalfAlt/> : <AiOutlineStar/>}</i>  \r\n             </span>\r\n             <span>\r\n               <i style={{color}} > {value >= 5 ? <FaStar/>: value >= 4.5 ? <FaStarHalfAlt/> : <AiOutlineStar/>}</i>  \r\n             </span>\r\n             <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nRating.defaultProps = {\r\n  color:\"#f8e825\"\r\n}\r\n\r\nRating.propTypes = {\r\n  value:PropTypes.number.isRequired,\r\n  text:PropTypes.string.isRequired,\r\n  color:PropTypes.string,\r\n}\r\n\r\n\r\nexport default Rating\r\n","import { useState, useEffect } from \"react\";\r\nimport { Row, Col, Image, ListGroup, Card, Form} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Rating from \"../components/Rating\";\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\n\r\nimport {useDispatch ,useSelector} from 'react-redux';\r\nimport {listProductsDetails} from '../redux/actions/productActions.js';\r\nimport Button from \"../UI/Button\";\r\nconst ProductScreen = ({ history, match }) => {\r\n  const [qty , setQty] = useState(1);\r\nconst productDetails = useSelector(state => state.productDetails);\r\nconst {product,error,loading} = productDetails;\r\nconst dispatch = useDispatch();\r\n\r\nconst addToCartHandler = (e) => {\r\n history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n}\r\n\r\nuseEffect(() => {\r\n  dispatch(listProductsDetails(match.params.id));  \r\n}, [dispatch, match])\r\n  return (\r\n    <>\r\n      <Link className=\"btn btn-light my-3\" to=\"/\">\r\n        Go Back\r\n      </Link>\r\n\r\n      {loading?<Loader/>:error?<Message variant=\"danger\">Error</Message> :<Row>\r\n        <Col md={6}>\r\n          <Image loading=\"lazy\" src={product.image} alt={product.name} fluid />\r\n        </Col>\r\n        <Col md={3}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h3>{product.name}</h3>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Rating\r\n                value={product.rating}\r\n                text={`${product.numReviews} reviews`}\r\n              />\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>Price:${product.price}</ListGroup.Item>\r\n            <ListGroup.Item>Description: {product.description}</ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={3}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Price</Col>\r\n                  <Col>\r\n                    <strong>${product.price}</strong>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Status:</Col>\r\n                  <Col>\r\n                  {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'};\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {product.countInStock > 0 &&  (\r\n                <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Qty</Col>\r\n                  <Col>\r\n                    <Form.Control as=\"select\" value={qty} onChange={e => setQty(e.target.value)}>\r\n                    {\r\n                      [...Array(product.countInStock).keys()].map(x => (\r\n                      <option key={x+1} value={x+1}>\r\n                       {x + 1}\r\n                      </option>\r\n                      ))\r\n                    }\r\n                    </Form.Control>\r\n                  </Col>\r\n                </Row>\r\n                </ListGroup.Item>\r\n              )}\r\n              <ListGroup.Item>\r\n              <Button className=\"btn-block\" onClick={addToCartHandler} type=\"button\" disabled={product.countInStock === 0}>Add To Cart</Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n"],"sourceRoot":""}