{"version":3,"sources":["components/Message.js","UI/Button.js","UI/TextInput.js","redux/actions/orderActions.js","screens/ProfileScreen.js"],"names":["Message","variant","children","defaultProps","Button","type","onClick","className","size","href","disabled","as","TextInput","placeholder","value","onChange","label","name","controlId","required","Group","Control","createOrder","order","dispatch","getState","a","ORDER_CREATE_REQUEST","userInfo","userLogin","config","headers","Authorization","token","axios","post","data","ORDER_CREATE_SUCCESS","payload","CART_RESET","localStorage","removeItem","ORDER_CREATE_FAIL","response","message","getOrderDetails","id","ORDER_DETAILS_REQUEST","get","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","payOrder","orderId","paymentResult","ORDER_PAY_REQUEST","put","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","myOrdersList","MY_ORDERS_REQUEST","MY_ORDERS_SUCCESS","MY_ORDERS_FAIL","ProfileScreen","location","history","userId","match","params","useState","setName","email","setEmail","search","split","useDispatch","userDetails","useSelector","state","myOrders","orders","loadingOrder","loading","errorOrder","error","user","useEffect","getUserDetails","push","md","onSubmit","e","console","log","preventDefault","target","Label","striped","bordered","hover","responsive","map","_id","createdAt","substring","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","style","color","to"],"mappings":"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","file":"static/js/ProfileScreen.6c475342.chunk.js","sourcesContent":["import {Alert} from 'react-bootstrap';\r\n\r\nconst Message = ({variant,children}) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant:\"info\", \r\n}\r\n\r\nexport default Message\r\n","import {Button as ButtonBs} from 'react-bootstrap';\r\n\r\nconst Button = ({children ,type, onClick, variant, className , size,href , disabled ,as}) => {\r\n    return(\r\n        <ButtonBs type={type} variant={variant} className={className} onClick={onClick}  size={size} href={href} disabled={disabled} as={as}>{children}</ButtonBs>\r\n    )\r\n    }\r\n\r\n    export default Button;","import {Form} from 'react-bootstrap';\r\n\r\n\r\nconst TextInput = ({type,placeholder,value ,onChange ,label, name, required,controlId ,children}) => {\r\n    return(\r\n        <Form.Group controlId={controlId} >\r\n        {children}\r\n                <Form.Control name={name}  label={label} type={type} placeholder={placeholder} value={value} onChange={onChange} required ></Form.Control>\r\n            </Form.Group>\r\n    )\r\n}\r\n\r\nexport default TextInput;","import {ORDER_CREATE_REQUEST,ORDER_CREATE_SUCCESS,ORDER_CREATE_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS,ORDER_PAY_FAIL , ORDER_PAY_RESET , ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS ,ORDER_DETAILS_FAIL,  MY_ORDERS_REQUEST,MY_ORDERS_SUCCESS ,MY_ORDERS_FAIL ,ORDER_CREATE_RESET} from '../constants/orderConstants.js';\r\nimport axios from \"axios\";\r\nimport { CART_RESET } from '../constants/cartConstants.js';\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    });\r\n\r\n    const  {userLogin: {userInfo}} = getState();\r\n    const config = {\r\n       headers:{\r\n           \"Content-Type\":\"application/json\",\r\n           Authorization:`Bearer ${userInfo.token}`\r\n       }\r\n      }\r\n    const { data } = await axios.post(\r\n      `http://localhost:5000/api/orders`,\r\n      order,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({\r\n      type: CART_RESET,\r\n      payload: data,\r\n    })\r\n    localStorage.removeItem('cartItems')\r\n  } catch (err) {\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`http://localhost:5000/api/orders/${id}`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n\r\n    }\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async(dispatch , getState) => {\r\n  try{\r\n    dispatch({\r\n      type:ORDER_PAY_REQUEST,\r\n\r\n    })\r\n    const  {userLogin: {userInfo}} = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type':'application/json',\r\n        Authorization:`Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n    const {data} =  await axios.put(`http://localhost:5000/api/orders/${orderId}/pay`,paymentResult, config)\r\n\r\n    dispatch({\r\n      type:ORDER_PAY_SUCCESS,\r\n     payload:data\r\n    })\r\n  }\r\n  catch(err){\r\n    dispatch({\r\n      type:ORDER_PAY_FAIL,\r\n      payload: err.response && err.response.data.message\r\n      ? err.response.data.message\r\n      : err.message,\r\n    })\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport const myOrdersList = () => async(dispatch , getState) => {\r\n  try{\r\n    dispatch({\r\n      type:MY_ORDERS_REQUEST,\r\n\r\n    })\r\n    const  {userLogin: {userInfo}} = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization:`Bearer ${userInfo.token}`\r\n      }\r\n    }\r\n    const { data } =  await axios.get(`http://localhost:5000/api/orders/myorders`, config)\r\n\r\n    dispatch({\r\n      type:MY_ORDERS_SUCCESS,\r\n     payload:data\r\n    })\r\n  }\r\n  catch(err){\r\n    dispatch({\r\n      type:MY_ORDERS_FAIL,\r\n      payload: err.response && err.response.data.message\r\n      ? err.response.data.message\r\n      : err.message,\r\n    })\r\n\r\n  }\r\n}","import  {useState , useEffect} from 'react';\r\n\r\nimport {Link} from 'react-router-dom';\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\nimport {FaTimes} from \"react-icons/fa\";\r\n\r\nimport {Form,Row,Col,  Table} from 'react-bootstrap';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport Message from '../components/Message'\r\nimport {myOrdersList} from '../redux/actions/orderActions.js';\r\nimport Loader from '../components/Loader';\r\nimport TextInput from '../UI/TextInput';\r\nimport Button from '../UI/Button';\r\nimport {getUserDetails} from '../redux/actions/userActions.js';\r\nconst ProfileScreen = ({location , history, match}) => {\r\n    const userId = match.params.id;\r\n    const [name,setName] = useState('');\r\n    const [email,setEmail] = useState('');\r\n    const [message,setMessage] = useState('');\r\n    const redirect = location.search ? location.search.split('=')[1]: '/'\r\nconst dispatch = useDispatch();\r\nconst userDetails = useSelector(state => state.userDetails);\r\nconst userLogin = useSelector(state => state.userLogin);\r\nconst myOrders =  useSelector(state => state.myOrders);\r\nconst {orders,loading:loadingOrder ,error:errorOrder} = myOrders;\r\n\r\nconst {userInfo} = userLogin;\r\nconst {loading  ,error , user}  = userDetails;\r\n\r\n const submitHandler = (e) => {\r\n       console.log('Submit Handler');\r\n       dispatch(getUserDetails(userId));\r\n } \r\n\r\n\r\nconst handleEmail = (e) => {\r\n    e.preventDefault();\r\n    setEmail(e.target.value);\r\n}\r\nconst handleName = (e) => {\r\n    e.preventDefault();\r\n\r\n    setName(e.target.value);\r\n}\r\n\r\n\r\n\r\nuseEffect(() => {\r\n    if(!userInfo) {\r\n        history.push(\"/login\");\r\n    } else {\r\n          if(!user.name) {\r\n                dispatch(getUserDetails('profile'));\r\n                          dispatch(myOrdersList());\r\n\r\n          } else {\r\n                setName(user.name);\r\n                setEmail(user.email);\r\n          }\r\n    }\r\n    \r\n},[history,userInfo , user , dispatch])\r\n    \r\n    return (\r\n    <Row>\r\n          <Col md={3}>\r\n  <h2>User Profile</h2>\r\n  {message && <Message variant='danger'>{message}</Message>}\r\n  {error && <Message variant='danger'>{error}</Message>}\r\n  {loading && <Loader/>}\r\n  <Form onSubmit={submitHandler}>\r\n  <TextInput type=\"text\" placeholder=\"Enter name\" value={name} onChange={handleName}>\r\n  <Form.Label>Name</Form.Label>\r\n\r\n  </TextInput>\r\n  <TextInput type=\"text\" placeholder=\"Enter email\" value={email} onChange={handleEmail}>\r\n  <Form.Label>Email</Form.Label>\r\n\r\n  </TextInput>\r\n<Button variant=\"primary\">Submit</Button>\r\n  </Form>\r\n          </Col>\r\n          <Col md={9} >\r\n              <h2>My Orders</h2>\r\n              {loadingOrder ? <Loader/> : errorOrder ? <Message variant=\"warning\">{errorOrder}</Message> :(\r\n                  <Table striped bordered hover responsive className='table-sm'>\r\n                  <thead>\r\n                      <tr>\r\n<th>ID</th>\r\n<th>DATE</th>\r\n<th>TOTAL</th>\r\n<th>PAID</th>\r\n<th>DELIVERED</th>\r\n                      </tr>\r\n\r\n                  </thead>\r\n                  <tbody>\r\n                      {orders ? orders.map(order => (\r\n                          <tr key={order._id}>\r\n                              <td>{order._id}</td>\r\n                              <td>{order.createdAt.substring(0,10)}</td>\r\n                              <td>{order.totalPrice}</td>\r\n                              <td>{order.isPaid ? order.paidAt.substring(0,10) : (<FaTimes/>)}</td>\r\n                              <td>{order.isDelivered ? order.deliveredAt.substring(0,10) : (<FaTimes style={{color:\"red\"}}/>)}</td>\r\n                              <td>\r\n                                  <LinkContainer to={`/order/${order._id}`}>\r\n                                      <Button variant='light'>Details</Button>\r\n                                  </LinkContainer>\r\n                              </td>\r\n                          </tr>\r\n                      )) : ' Searching Orders'}\r\n                  </tbody>\r\n                  </Table>\r\n              )}\r\n          </Col>\r\n    </Row>\r\n    )\r\n}\r\nexport default ProfileScreen;"],"sourceRoot":""}