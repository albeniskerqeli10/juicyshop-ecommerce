{"version":3,"sources":["components/Message.js","components/FormContainer.js","screens/LoginScreen.js"],"names":["Message","variant","children","defaultProps","FormContainer","className","xs","md","LoginScreen","location","history","useState","email","setEmail","password","setPassword","redirect","search","split","dispatch","useDispatch","userLogin","useSelector","state","loading","error","userInfo","useEffect","push","onSubmit","e","preventDefault","alert","console","log","login","Group","Control","type","placeholder","value","onChange","target","to"],"mappings":"sGAAA,oBAEMA,EAAU,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,QAAQC,EAAc,EAAdA,SACtB,OACI,cAAC,IAAD,CAAOD,QAASA,EAAhB,SACKC,KAKbF,EAAQG,aAAe,CACnBF,QAAQ,QAGGD,O,iCCdf,sCAceI,IAZO,SAAC,GAAgB,IAAfF,EAAc,EAAdA,SACpB,OACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAKG,UAAU,4BAAf,SACI,cAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,EAAjB,SACKL,U,wJC4DNM,UAxDK,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,SAAWC,EAAa,EAAbA,QAAa,EACjBC,mBAAS,IADQ,mBACnCC,EADmC,KAC7BC,EAD6B,OAEXF,mBAAS,IAFE,mBAEnCG,EAFmC,KAE1BC,EAF0B,KAGpCC,EAAWP,EAASQ,OAASR,EAASQ,OAAOC,MAAM,KAAK,GAAI,IAChEC,EAAWC,cACXC,EAAYC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,aACtCG,EAA+BH,EAA/BG,QAAUC,EAAqBJ,EAArBI,MAAQC,EAAaL,EAAbK,SAyBrB,OANJC,qBAAU,WACHD,GACChB,EAAQkB,KAAKZ,KAEnB,CAACN,EAAQgB,EAASV,IAGhB,eAAC,IAAD,WACI,yCACCS,GAAS,cAAC,IAAD,CAASxB,QAAQ,SAAjB,SAA2BwB,IACpCD,GAAW,cAAC,IAAD,IACZ,eAAC,IAAD,CAAMK,SA7BQ,SAACC,GACnBA,EAAEC,iBACQ,IAAPnB,GAAuB,IAAVE,EACZkB,MAAM,oCAMVC,QAAQC,IAAI,eACZf,EAASgB,YAAM,CACXvB,MAAMA,EACNE,SAASA,OAiBT,UACI,cAAC,IAAKsB,MAAN,UACI,cAAC,IAAKC,QAAN,CAAcC,KAAK,QAAQC,YAAY,cAAcC,MAAO5B,EAAO6B,SAAU,SAACX,GAAD,OAAOjB,EAASiB,EAAEY,OAAOF,YAE1G,cAAC,IAAKJ,MAAN,UACI,cAAC,IAAKC,QAAN,CAAcC,KAAK,WAAWC,YAAY,iBAAiBC,MAAO1B,EAAU2B,SAAU,SAACX,GAAD,OAAOf,EAAYe,EAAEY,OAAOF,YAGtH,cAAC,IAAD,CAAQF,KAAK,SAASrC,QAAQ,UAA9B,wBAIJ,cAAC,IAAD,CAAKI,UAAU,OAAf,SACI,eAAC,IAAD,6BACmB,cAAC,OAAD,CAAMsC,GAAI3B,EAAQ,6BAAyBA,GAAY,YAAvD","file":"static/js/8.b3c7e819.chunk.js","sourcesContent":["import {Alert} from 'react-bootstrap';\r\n\r\nconst Message = ({variant,children}) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant:\"info\", \r\n}\r\n\r\nexport default Message\r\n","import {Container, Row,Col} from 'react-bootstrap';\r\n\r\nconst FormContainer = ({children}) => {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import  {useState , useEffect} from 'react';\r\n\r\nimport {Link} from 'react-router-dom';\r\nimport {Form, Button,Row,Col} from 'react-bootstrap';\r\nimport FormContainer from '../components/FormContainer';\r\nimport {login} from '../actions/userActions.js';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader';\r\n\r\n\r\nconst LoginScreen = ({location , history}) => {\r\n    const [email,setEmail] = useState('');\r\n    const [password,setPassword] = useState('');\r\n    const redirect = location.search ? location.search.split('=')[1]: '/'\r\nconst dispatch = useDispatch();\r\nconst userLogin = useSelector(state => state.userLogin);\r\nconst {loading  ,error , userInfo}  = userLogin;\r\nconst submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if(email==\"\" || password==\"\") {\r\n        alert('Please fill the required fields');\r\n    }\r\n\r\n\r\n\r\nelse {\r\n    console.log('Event fired');\r\n    dispatch(login({\r\n        email:email,\r\n        password:password,\r\n    }))\r\n}\r\n\r\n}\r\n\r\nuseEffect(() => {\r\n    if(userInfo) {\r\n        history.push(redirect);\r\n    }\r\n},[history,userInfo,redirect])\r\n\r\n    return (\r\n    <FormContainer>\r\n        <h1>Sign In</h1>\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {loading && <Loader/>}\r\n        <Form onSubmit ={submitHandler}>\r\n            <Form.Group >\r\n                <Form.Control type=\"email\" placeholder=\"Enter Email\" value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Control type=\"password\" placeholder=\"Enter Password\" value={password} onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n                Sign In\r\n            </Button>\r\n        </Form>\r\n        <Row className=\"py-3\">\r\n            <Col>\r\n                New Customer ? <Link to={redirect ? `/register?redirect=${redirect}`: '/register'}>Register</Link>\r\n            </Col>\r\n        </Row>\r\n    </FormContainer>\r\n    )\r\n}\r\nexport default LoginScreen;"],"sourceRoot":""}