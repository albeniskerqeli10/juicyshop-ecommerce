{"version":3,"sources":["components/Message.js","UI/Button.js","UI/TextInput.js","components/FormContainer.js","hooks/useForm.js","screens/RegisterScreen.js"],"names":["Message","variant","children","defaultProps","Button","type","onClick","className","size","href","disabled","as","TextInput","placeholder","value","onChange","label","name","controlId","required","Group","Control","FormContainer","xs","md","useForm","initialState","useState","formData","setFormData","handleInputChange","e","target","RegisterScreen","location","history","email","password","confirmPassword","message","setMessage","redirect","search","split","dispatch","useDispatch","userRegister","useSelector","state","loading","error","userInfo","useEffect","push","onSubmit","preventDefault","register","to"],"mappings":"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","file":"static/js/Register.038c85d6.chunk.js","sourcesContent":["import {Alert} from 'react-bootstrap';\r\n\r\nconst Message = ({variant,children}) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant:\"info\", \r\n}\r\n\r\nexport default Message\r\n","import {Button as ButtonBs} from 'react-bootstrap';\r\n\r\nconst Button = ({children ,type, onClick, variant, className , size,href , disabled ,as}) => {\r\n    return(\r\n        <ButtonBs type={type} variant={variant} className={className} onClick={onClick}  size={size} href={href} disabled={disabled} as={as}>{children}</ButtonBs>\r\n    )\r\n    }\r\n\r\n    export default Button;","import {Form} from 'react-bootstrap';\r\n\r\n\r\nconst TextInput = ({type,placeholder,value ,onChange ,label, name, required,controlId ,children}) => {\r\n    return(\r\n        <Form.Group controlId={controlId} >\r\n        {children}\r\n                <Form.Control name={name}  label={label} type={type} placeholder={placeholder} value={value} onChange={onChange} required ></Form.Control>\r\n            </Form.Group>\r\n    )\r\n}\r\n\r\nexport default TextInput;","import {Container, Row,Col} from 'react-bootstrap';\r\n\r\nconst FormContainer = ({children}) => {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import {useState, useCallback} from 'react';\r\n\r\nconst useForm = (initialState = {}) => {\r\n  const [formData, setFormData] = useState(initialState);\r\n\r\n  const handleInputChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  }\r\n\r\n  return { formData,setFormData, handleInputChange };\r\n};\r\nexport default useForm;\r\n","import  {useState , useEffect} from 'react';\r\n\r\nimport {Link} from 'react-router-dom';\r\nimport {Form,Row,Col} from 'react-bootstrap';\r\nimport FormContainer from '../components/FormContainer';\r\nimport {register} from '../redux/actions/userActions.js';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader';\r\nimport TextInput from '../UI/TextInput';\r\nimport Button from '../UI/Button';\r\nimport useForm from '../hooks/useForm';\r\n\r\n\r\nconst RegisterScreen = ({location , history}) => {\r\n    const {formData, handleInputChange} = useForm({\r\n        name:'',\r\n        email:'',\r\n        password:'',\r\n        confirmPassword:'',\r\n    })\r\n    const {name,email,password,confirmPassword} = formData;\r\n    const [message,setMessage] = useState(null);\r\n    const redirect = location.search ? location.search.split('=')[1]: '/'\r\nconst dispatch = useDispatch();\r\nconst userRegister = useSelector(state => state.userRegister);\r\nconst {loading  ,error , userInfo}  = userRegister;\r\nconst submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if(password !== confirmPassword ) {\r\n        setMessage('Password do not match');\r\n    }\r\nelse {\r\n    dispatch(register(name,email,password));\r\n}\r\n\r\n}\r\n\r\n\r\nuseEffect(() => {\r\n    if(userInfo) {\r\n        history.push(redirect);\r\n    }\r\n},[history,userInfo,redirect])\r\n    \r\n    return (\r\n    <FormContainer>\r\n        <h1>Sign Up</h1>\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {loading && <Loader/>}\r\n        <Form onSubmit={submitHandler}>\r\n                <TextInput type=\"text\" name=\"name\" placeholder=\"Enter Name\" value={name} onChange={handleInputChange} required></TextInput>\r\n                <TextInput type=\"text\" name=\"email\" placeholder=\"Enter Email\" value={email} onChange={handleInputChange} required></TextInput>\r\n                <TextInput type=\"text\" name=\"password\" placeholder=\"Enter Password\" value={password} onChange={handleInputChange} required></TextInput>\r\n                <TextInput type=\"text\"  name=\"confirmPassword\" placeholder=\"Enter Password\" value={confirmPassword} onChange={handleInputChange} required></TextInput>\r\n\r\n\r\n            <Button type=\"submit\" variant=\"primary\" >\r\n                Sign Up\r\n            </Button>\r\n        </Form>\r\n        <Row className=\"py-3\">\r\n            <Col>\r\n                Already Register? <Link to=\"/login\">Login</Link>\r\n            </Col>\r\n        </Row>\r\n    </FormContainer>\r\n    )\r\n}\r\nexport default RegisterScreen;"],"sourceRoot":""}