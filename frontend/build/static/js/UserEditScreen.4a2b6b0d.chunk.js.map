{"version":3,"sources":["components/Message.js","UI/Button.js","UI/TextInput.js","components/FormContainer.js","hooks/useForm.js","screens/UserEditScreen.js"],"names":["Message","variant","children","defaultProps","Button","type","onClick","className","size","href","disabled","as","TextInput","placeholder","value","onChange","label","name","controlId","required","Group","Control","FormContainer","xs","md","useForm","initialState","useState","formData","setFormData","handleInputChange","e","target","UserEditScreen","match","history","userId","params","id","email","isAdmin","setName","setEmail","message","setIsAdmin","dispatch","useDispatch","userDetails","useSelector","state","userUpdate","successUpdate","success","loading","error","user","useEffect","push","_id","getUserDetails","to","onSubmit","preventDefault","updateUser","Check","checked"],"mappings":"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","file":"static/js/UserEditScreen.4a2b6b0d.chunk.js","sourcesContent":["import {Alert} from 'react-bootstrap';\r\n\r\nconst Message = ({variant,children}) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant:\"info\", \r\n}\r\n\r\nexport default Message\r\n","import {Button as ButtonBs} from 'react-bootstrap';\r\n\r\nconst Button = ({children ,type, onClick, variant, className , size,href , disabled ,as}) => {\r\n    return(\r\n        <ButtonBs type={type} variant={variant} className={className} onClick={onClick}  size={size} href={href} disabled={disabled} as={as}>{children}</ButtonBs>\r\n    )\r\n    }\r\n\r\n    export default Button;","import {Form} from 'react-bootstrap';\r\n\r\n\r\nconst TextInput = ({type,placeholder,value ,onChange ,label, name, required,controlId ,children}) => {\r\n    return(\r\n        <Form.Group controlId={controlId} >\r\n        {children}\r\n                <Form.Control name={name}  label={label} type={type} placeholder={placeholder} value={value} onChange={onChange} required ></Form.Control>\r\n            </Form.Group>\r\n    )\r\n}\r\n\r\nexport default TextInput;","import {Container, Row,Col} from 'react-bootstrap';\r\n\r\nconst FormContainer = ({children}) => {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import {useState, useCallback} from 'react';\r\n\r\nconst useForm = (initialState = {}) => {\r\n  const [formData, setFormData] = useState(initialState);\r\n\r\n  const handleInputChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  }\r\n\r\n  return { formData,setFormData, handleInputChange };\r\n};\r\nexport default useForm;\r\n","import  {useState , useEffect} from 'react';\r\n\r\nimport {Link} from 'react-router-dom';\r\nimport {Form} from 'react-bootstrap';\r\nimport FormContainer from '../components/FormContainer';\r\nimport {getUserDetails , updateUser} from '../redux/actions/userActions.js';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader';\r\nimport TextInput from '../UI/TextInput';\r\nimport Button from '../UI/Button';\r\nimport useForm from '../hooks/useForm';\r\n\r\n\r\nconst UserEditScreen = ({match , history}) => {\r\n  const userId = match.params.id;\r\n    const {formData, handleInputChange} = useForm({\r\n        name:'',\r\n        email:'',\r\nisAdmin:false,\r\n    })\r\n\r\nconst [name,setName] = useState('');\r\nconst [email,setEmail] = useState('');\r\n    const [message,setMessage] = useState(null);\r\n    const [isAdmin,setIsAdmin] = useState(false);\r\nconst dispatch = useDispatch();\r\nconst userDetails = useSelector(state => state.userDetails);\r\nconst userUpdate = useSelector(state => state.userUpdate);\r\nconst {success:successUpdate,  loading:loadingUpdate}  = userUpdate;\r\n\r\nconst {loading  ,error , user}  = userDetails;\r\n\r\nuseEffect(() => {\r\n  if(successUpdate) {\r\n    history.push('/admin/userlist');\r\n  }\r\n if(!user.name || user._id !== userId) {\r\n   dispatch(getUserDetails(userId))\r\n }\r\n else {\r\n  setEmail(user.email);\r\n  setName(user.name);\r\n  setIsAdmin(user.isAdmin);\r\n }\r\n},[user,userId,formData, history ,successUpdate,dispatch])\r\nconst submitHandler = (e) => {\r\n  e.preventDefault();\r\n  dispatch(updateUser({\r\n    _id:userId,\r\n    name,\r\n    email,\r\n    isAdmin,\r\n  }))    \r\n}    \r\n\r\n    return (\r\n      <>\r\n      <Link to='/admin/userList' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n    <FormContainer>\r\n        <h1>Edit User </h1>\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {loading && <Loader/>}\r\n        <Form onSubmit={submitHandler}>\r\n                <TextInput type=\"text\" name=\"name\" placeholder=\"Enter Name\" value={name} onChange={(e) => setName(e.target.value)} required></TextInput>\r\n                <TextInput type=\"email\" name=\"email\" placeholder=\"Enter Email\" value={email} onChange={(e) => setEmail(e.target.value)} required></TextInput>\r\n\r\n                <Form.Group><Form.Check type=\"checkbox\" label=\"Is Admin\" name=\"isAdmin\" value={isAdmin} onChange={(e) => setIsAdmin(e.target.checked)}>\r\n                  \r\n                </Form.Check>\r\n                </Form.Group>\r\n\r\n\r\n            <Button type=\"submit\" variant=\"primary\" >\r\n                Edit User\r\n            </Button>\r\n        </Form>\r\n       \r\n    </FormContainer>\r\n    </>\r\n    )\r\n}\r\nexport default UserEditScreen;"],"sourceRoot":""}