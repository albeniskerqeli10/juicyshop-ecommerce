{"version":3,"sources":["components/Message.js","UI/Button.js","redux/actions/cartActions.js","screens/CartScreen.js"],"names":["Message","variant","children","defaultProps","Button","type","onClick","className","size","href","disabled","as","addToCart","id","qty","dispatch","getState","a","axios","get","data","CART_ADD_ITEM","payload","product","_id","name","image","price","countInStock","localStorage","setItem","JSON","stringify","cart","cartItems","removeFromCart","CART_REMOVE_ITEM","saveShippingAddress","CART_SAVE_SHIPPING_ADDRESS","savePaymentMethod","CART_SAVE_PAYMENT_METHOD","CartScreen","match","location","history","useSelector","state","productId","params","useDispatch","search","Number","split","useEffect","calculateItemsQty","reduce","acc","item","calculateTotalPrice","md","length","to","map","Item","src","alt","fluid","rounded","Control","value","onChange","e","target","Array","keys","x","toFixed","push"],"mappings":"sGAAA,oBAEMA,EAAU,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,QAAQC,EAAc,EAAdA,SACtB,OACI,cAAC,IAAD,CAAOD,QAASA,EAAhB,SACKC,KAKbF,EAAQG,aAAe,CACnBF,QAAQ,QAGGD,O,iCCdf,mBAQmBI,IANJ,SAAC,GAA8E,IAA7EF,EAA4E,EAA5EA,SAAUG,EAAkE,EAAlEA,KAAMC,EAA4D,EAA5DA,QAASL,EAAmD,EAAnDA,QAASM,EAA0C,EAA1CA,UAAYC,EAA8B,EAA9BA,KAAKC,EAAyB,EAAzBA,KAAOC,EAAkB,EAAlBA,SAAUC,EAAQ,EAARA,GACjF,OACI,cAAC,IAAD,CAAUN,KAAMA,EAAMJ,QAASA,EAASM,UAAWA,EAAWD,QAASA,EAAUE,KAAMA,EAAMC,KAAMA,EAAMC,SAAUA,EAAUC,GAAIA,EAAjI,SAAsIT,M,+NCDjIU,EAAY,SAACC,EAAGC,GAAJ,8CAAa,WAAMC,EAAWC,GAAjB,iBAAAC,EAAA,sEACbC,IAAMC,IAAN,6CAAgDN,IADnC,gBAC3BO,EAD2B,EAC3BA,KACPL,EAAS,CACLV,KAAKgB,IACLC,QAAQ,CACJC,QAASH,EAAKI,IACdC,KAAKL,EAAKK,KACVC,MAAMN,EAAKM,MACXC,MAAMP,EAAKO,MACXC,aAAaR,EAAKQ,aAClBd,SAGRe,aAAaC,QAAQ,YAAaC,KAAKC,UAAUhB,IAAWiB,KAAKC,YAb/B,2CAAb,yDAoBZC,EAAiB,SAACtB,GAAD,8CAAQ,WAAME,EAAWC,GAAjB,SAAAC,EAAA,sDAClCF,EAAS,CACLV,KAAK+B,IACLd,QAAQT,IAEZgB,aAAaC,QAAQ,YAAcC,KAAKC,UAAUhB,IAAWiB,KAAKC,YALhC,2CAAR,yDAUjBG,EAAuB,SAACjB,GAAD,OAAU,SAACL,GAC/CA,EAAS,CACLV,KAAKiC,IACLhB,QAAQF,IAERS,aAAaC,QAAQ,kBAAoBC,KAAKC,UAAUZ,MAG9CmB,EAAoB,SAACnB,GAAD,OAAU,SAACL,GACzCA,EAAS,CACLV,KAAKmC,IACLlB,QAAQF,IAEZS,aAAaC,QAAQ,gBAAiBC,KAAKC,UAAUZ,O,2KCqD1CqB,UA3FI,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,MAAMC,EAAsB,EAAtBA,SAASC,EAAa,EAAbA,QAG3BV,EADMW,aAAY,SAAAC,GAAK,OAAIA,EAAMb,QACjCC,UACHa,EAAYL,EAAMM,OAAOnC,GAEvBE,EAAYkC,cACZnC,EAAM6B,EAASO,OAASC,OAAOR,EAASO,OAAOE,MAAM,KAAK,IAAI,EACpEC,qBAAU,WACRN,GACDhC,EAASH,YAAUmC,EAAYjC,MAE7B,CAACC,EAAWgC,EAAYjC,IAG7B,IASMwC,EAAoBpB,EAAUqB,QAAO,SAACC,EAAIC,GAC9C,OAAOD,EAAMC,EAAK3C,MACjB,GAGG4C,EAAsBxB,EAAUqB,QAAO,SAACC,EAAKC,GACjD,OAAOD,EAAMC,EAAK9B,MAAQ8B,EAAK3C,MAC/B,GAGE,OACJ,eAAC,IAAD,WACE,eAAC,IAAD,CAAK6C,GAAI,EAAT,UACD,+CACsB,IAArBzB,EAAU0B,OAAe,eAAC,IAAD,iCACxB,cAAC,OAAD,CAAMC,GAAG,IAAT,2BAEA,cAAC,IAAD,CAAW5D,QAAQ,QAAnB,SACGiC,EAAU4B,KAAI,SAAAL,GAAI,OACjB,cAAC,IAAUM,KAAX,UACJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAKJ,GAAI,EAAT,SACE,cAAC,IAAD,CAAOK,IAAKP,EAAK/B,MAAOuC,IAAKR,EAAKhC,KAAMyC,OAAK,EAACC,SAAO,MAEvD,cAAC,IAAD,CAAKR,GAAI,EAAT,SACE,cAAC,OAAD,CAAME,GAAE,mBAAcJ,EAAKlC,SAA3B,SAAuCkC,EAAKhC,SAE9C,eAAC,IAAD,CAAKkC,GAAI,EAAT,cAAcF,EAAK9B,SACnB,cAAC,IAAD,CAAKgC,GAAI,EAAT,SACE,cAAC,IAAKS,QAAN,CAAczD,GAAG,SAAS0D,MAAOZ,EAAK3C,IAAKwD,SAAU,SAACC,GAAD,OAAOxD,EAASH,YAAU6C,EAAKlC,QAAU4B,OAAOoB,EAAEC,OAAOH,UAA9G,SACC,YAAII,MAAMhB,EAAK7B,cAAc8C,QAAQZ,KAAI,SAAAa,GAAC,OACzC,wBAAoBN,MAAOM,EAAI,EAA/B,SAAmCA,EAAI,GAA1BA,EAAI,UAIrB,cAAC,IAAD,CAAKhB,GAAI,EAAT,SACH,cAAC,IAAD,CAAQtD,KAAK,SAASJ,QAAQ,QAAQK,QAAS,SAACiE,GAAD,OA7CnB1D,EA6CgD4C,EAAKlC,aA5CnFR,EAASoB,YAAetB,IADK,IAACA,GA6C5B,SACO,4BAAG,cAAC,IAAD,cAlBgB4C,EAAKlC,iBA4B/B,cAAC,IAAD,CAAKoC,GAAI,EAAT,SACA,cAAC,IAAD,UACE,eAAC,IAAD,CAAW1D,QAAQ,QAAnB,UACJ,eAAC,IAAU8D,KAAX,WACE,2CAAcT,EAAd,YACDI,EAAoBkB,QAAQ,MAE7B,cAAC,IAAUb,KAAX,UACE,cAAC,IAAD,CAAQ1D,KAAK,SAASE,UAAU,YAAYG,SAA+B,IAArBwB,EAAU0B,OAActD,QA3DxD,SAACiE,GACvB3B,EAAQiC,KAAK,6BA0Db","file":"static/js/Cart.02f07cce.chunk.js","sourcesContent":["import {Alert} from 'react-bootstrap';\r\n\r\nconst Message = ({variant,children}) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant:\"info\", \r\n}\r\n\r\nexport default Message\r\n","import {Button as ButtonBs} from 'react-bootstrap';\r\n\r\nconst Button = ({children ,type, onClick, variant, className , size,href , disabled ,as}) => {\r\n    return(\r\n        <ButtonBs type={type} variant={variant} className={className} onClick={onClick}  size={size} href={href} disabled={disabled} as={as}>{children}</ButtonBs>\r\n    )\r\n    }\r\n\r\n    export default Button;","import axios from 'axios';\r\nimport {CART_ADD_ITEM , CART_REMOVE_ITEM,  CART_SAVE_SHIPPING_ADDRESS , CART_SAVE_PAYMENT_METHOD} from '../constants/cartConstants';\r\n\r\nexport const addToCart  =(id,qty) =>  async(dispatch , getState) => {\r\n    const {data} = await axios.get(`http://localhost:5000/api/products/${id}`);\r\n    dispatch({\r\n        type:CART_ADD_ITEM,\r\n        payload:{\r\n            product: data._id,\r\n            name:data.name,\r\n            image:data.image,\r\n            price:data.price , \r\n            countInStock:data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n \r\n}\r\n\r\n\r\n\r\nexport const removeFromCart = (id) => async(dispatch , getState) => {\r\n    dispatch({\r\n        type:CART_REMOVE_ITEM,\r\n        payload:id\r\n    })\r\n    localStorage.setItem('cartItems' , JSON.stringify(getState().cart.cartItems));\r\n\r\n\r\n}\r\n\r\nexport const saveShippingAddress  = (data) => (dispatch) => {\r\ndispatch({\r\n    type:CART_SAVE_SHIPPING_ADDRESS,\r\n    payload:data,\r\n})\r\n    localStorage.setItem('shippingAddress' , JSON.stringify(data));\r\n}\r\n\r\nexport const  savePaymentMethod  =(data) => (dispatch) => {\r\n    dispatch({\r\n        type:CART_SAVE_PAYMENT_METHOD,\r\n        payload:data,\r\n    })\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data));\r\n}","import {useEffect} from 'react';\r\nimport {useDispatch , useSelector} from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport {Row ,Col , ListGroup , Image,Form,Card} from 'react-bootstrap';\r\nimport { addToCart, removeFromCart } from '../redux/actions/cartActions';\r\nimport {Link} from 'react-router-dom';\r\nimport {FaTrash} from 'react-icons/fa';\r\nimport Button from '../UI/Button';\r\nconst CartScreen = ({match,location,history}) => {\r\n\r\n  const cart = useSelector(state => state.cart);\r\n  const {cartItems} = cart;\r\nconst productId = match.params.id;\r\n\r\n  const dispatch  = useDispatch();\r\n  const qty = location.search ? Number(location.search.split('=')[1]):1\r\n  useEffect(() => {\r\n if(productId) {\r\n   dispatch(addToCart(productId , qty));\r\n }\r\n  }, [dispatch,  productId , qty])\r\n\r\n\r\nconst removeFromCartHandler =(id) => {\r\ndispatch(removeFromCart(id));\r\n  \r\n}\r\n\r\nconst checkoutHandler = (e) => {\r\n  history.push('/login?redirect=shipping');\r\n}\r\n\r\nconst calculateItemsQty = cartItems.reduce((acc,item) => {\r\n  return acc + item.qty\r\n}, 0)\r\n\r\n\r\nconst calculateTotalPrice = cartItems.reduce((acc, item) => {\r\n  return acc + item.price * item.qty;\r\n},0)\r\n\r\n\r\n    return(\r\n<Row>\r\n  <Col md={8}>\r\n <h1>Shopping Cart</h1>\r\n {cartItems.length === 0 ? <Message> Your cart is empty\r\n   <Link to=\"/\">   Go Back</Link>\r\n </Message> : (\r\n   <ListGroup variant=\"flush\">\r\n     {cartItems.map(item => (\r\n       <ListGroup.Item key={item.product}>\r\n   <Row>\r\n     <Col md={2}>\r\n       <Image src={item.image} alt={item.name} fluid rounded/>\r\n     </Col>\r\n     <Col md={3}>\r\n       <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n     </Col>\r\n     <Col md={2}>${item.price}</Col>\r\n     <Col md={2}>\r\n       <Form.Control as='select' value={item.qty} onChange={(e) => dispatch(addToCart(item.product , Number(e.target.value)))}>\r\n       {[...Array(item.countInStock).keys()].map(x => (\r\n         <option key={x + 1} value={x + 1}>{x + 1}</option>\r\n       ))}\r\n       </Form.Control>\r\n     </Col>\r\n     <Col md={2}>\r\n  <Button type=\"button\" variant=\"light\" onClick={(e) => removeFromCartHandler(item.product)}>\r\n         <i><FaTrash/></i>\r\n       </Button> \r\n     </Col>\r\n   </Row>\r\n       </ListGroup.Item>\r\n     ))}\r\n   </ListGroup>\r\n )}\r\n  </Col>\r\n\r\n  <Col md={4}>\r\n  <Card>\r\n    <ListGroup variant=\"flush\">\r\n<ListGroup.Item>\r\n  <h2>Subtotal {calculateItemsQty} items</h2>\r\n{calculateTotalPrice.toFixed(2)}\r\n</ListGroup.Item>\r\n<ListGroup.Item>\r\n  <Button type=\"button\" className=\"btn-block\" disabled={cartItems.length === 0} onClick={checkoutHandler} >\r\n    Proceed to Checkout\r\n  </Button>\r\n</ListGroup.Item>\r\n    </ListGroup>\r\n  </Card>\r\n\r\n</Col>\r\n</Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen;"],"sourceRoot":""}