{"version":3,"sources":["components/Message.js","UI/Button.js","actions/cartActions.js","screens/CartScreen.js"],"names":["Message","variant","children","defaultProps","Button","type","onClick","className","size","href","disabled","as","addToCart","id","qty","dispatch","getState","a","axios","get","data","CART_ADD_ITEM","payload","product","_id","name","image","price","countInStock","localStorage","setItem","JSON","stringify","cart","cartItems","CartScreen","match","location","history","useSelector","state","productId","params","useDispatch","search","Number","split","useEffect","removeFromCartHandler","CART_REMOVE_ITEM","removeFromCart","calculateItemsQty","reduce","acc","item","calculateTotalPrice","Row","Col","md","length","to","ListGroup","map","Item","Image","src","alt","fluid","rounded","Form","Control","value","onChange","e","target","Array","keys","x","Card","toFixed","push"],"mappings":"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","file":"static/js/Cart.3ef84fb0.chunk.js","sourcesContent":["import {Alert} from 'react-bootstrap';\r\n\r\nconst Message = ({variant,children}) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant:\"info\", \r\n}\r\n\r\nexport default Message\r\n","import {Button as ButtonBs} from 'react-bootstrap';\r\n\r\nconst Button = ({children ,type, onClick, variant, className , size,href , disabled ,as}) => {\r\n    return(\r\n        <ButtonBs type={type} variant={variant} className={className} onClick={onClick}  size={size} href={href} disabled={disabled} as={as}>{children}</ButtonBs>\r\n    )\r\n    }\r\n\r\n    export default Button;","import axios from 'axios';\r\nimport {CART_ADD_ITEM , CART_REMOVE_ITEM} from '../constants/cartConstants';\r\n\r\nexport const addToCart  =(id,qty) =>  async(dispatch , getState) => {\r\n    const {data} = await axios.get(`http://localhost:5000/api/products/${id}`);\r\n    dispatch({\r\n        type:CART_ADD_ITEM,\r\n        payload:{\r\n            product: data._id,\r\n            name:data.name,\r\n            image:data.image,\r\n            price:data.price , \r\n            countInStock:data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n \r\n}\r\n\r\nexport const removeFromCart = (id) => async(dispatch , getState) => {\r\n    dispatch({\r\n        type:CART_REMOVE_ITEM,\r\n        payload:id\r\n    })\r\n    localStorage.setItem('cartItems' , JSON.stringify(getState().cart.cartItems));\r\n\r\n\r\n}","import React,{useEffect} from 'react';\r\nimport {useDispatch , useSelector} from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport {Row ,Col , ListGroup , Image,Form,Card} from 'react-bootstrap';\r\nimport { addToCart, removeFromCart } from '../actions/cartActions';\r\nimport {Link} from 'react-router-dom';\r\nimport {FaTrash} from 'react-icons/fa';\r\nimport Button from '../UI/Button';\r\nconst CartScreen = ({match,location,history}) => {\r\n\r\n  const cart = useSelector(state => state.cart);\r\n  const {cartItems} = cart;\r\nconst productId = match.params.id;\r\n\r\n  const dispatch  = useDispatch();\r\n  const qty = location.search ? Number(location.search.split('=')[1]):1\r\n  useEffect(() => {\r\n if(productId) {\r\n   dispatch(addToCart(productId , qty));\r\n }\r\n  }, [dispatch,  productId , qty])\r\n\r\n\r\nconst removeFromCartHandler =(id) => {\r\ndispatch(removeFromCart(id));\r\n  \r\n}\r\n\r\nconst checkoutHandler = (e) => {\r\n  history.push('/login?redirect=shipping');\r\n}\r\n\r\nconst calculateItemsQty = cartItems.reduce((acc,item) => {\r\n  return acc + item.qty\r\n}, 0)\r\n\r\n\r\nconst calculateTotalPrice = cartItems.reduce((acc, item) => {\r\n  return acc + item.price * item.qty;\r\n},0)\r\n\r\n\r\n    return(\r\n<Row>\r\n  <Col md={8}>\r\n <h1>Shopping Cart</h1>\r\n {cartItems.length === 0 ? <Message> Your cart is empty\r\n   <Link to=\"/\">   Go Back</Link>\r\n </Message> : (\r\n   <ListGroup variant=\"flush\">\r\n     {cartItems.map(item => (\r\n       <ListGroup.Item key={item.product}>\r\n   <Row>\r\n     <Col md={2}>\r\n       <Image src={item.image} alt={item.name} fluid rounded/>\r\n     </Col>\r\n     <Col md={3}>\r\n       <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n     </Col>\r\n     <Col md={2}>${item.price}</Col>\r\n     <Col md={2}>\r\n       <Form.Control as='select' value={item.qty} onChange={(e) => dispatch(addToCart(item.product , Number(e.target.value)))}>\r\n       {[...Array(item.countInStock).keys()].map(x => (\r\n         <option key={x + 1} value={x + 1}>{x + 1}</option>\r\n       ))}\r\n       </Form.Control>\r\n     </Col>\r\n     <Col md={2}>\r\n  <Button type=\"button\" variant=\"light\" onClick={(e) => removeFromCartHandler(item.product)}>\r\n         <i><FaTrash/></i>\r\n       </Button> \r\n     </Col>\r\n   </Row>\r\n       </ListGroup.Item>\r\n     ))}\r\n   </ListGroup>\r\n )}\r\n  </Col>\r\n\r\n  <Col md={4}>\r\n  <Card>\r\n    <ListGroup variant=\"flush\">\r\n<ListGroup.Item>\r\n  <h2>Subtotal {calculateItemsQty} items</h2>\r\n{calculateTotalPrice.toFixed(2)}\r\n</ListGroup.Item>\r\n<ListGroup.Item>\r\n  <Button type=\"button\" className=\"btn-block\" disabled={cartItems.length === 0} onClick={checkoutHandler} >\r\n    Proceed to Checkout\r\n  </Button>\r\n</ListGroup.Item>\r\n    </ListGroup>\r\n  </Card>\r\n\r\n</Col>\r\n</Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen;"],"sourceRoot":""}